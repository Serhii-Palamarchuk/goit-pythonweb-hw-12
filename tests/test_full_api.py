"""
–¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è API –±–µ–∑ –∫–æ–Ω—Ñ–ª—ñ–∫—Ç—ñ–≤ –∑ —Ç–µ—Ä–º—ñ–Ω–∞–ª–æ–º
"""
import subprocess
import time
import requests
import signal
import os


def test_contacts_api():
    """–¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è API —É –æ–∫—Ä–µ–º–æ–º—É –ø—Ä–æ—Ü–µ—Å—ñ"""
    print("üöÄ –ó–∞–ø—É—Å–∫–∞—î–º–æ —Ç–µ—Å—Ç–∏ Contacts API...")
    
    # –°–ø–æ—á–∞—Ç–∫—É –ø–µ—Ä–µ–≤—ñ—Ä–∏–º–æ, —á–∏ –ø—Ä–∞—Ü—é—î –±–∞–∑–∞ –¥–∞–Ω–∏—Ö
    print("üì¶ –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –±–∞–∑—É –¥–∞–Ω–∏—Ö...")
    try:
        # –°–ø—Ä–æ–±—É—î–º–æ –ø—ñ–¥–∫–ª—é—á–∏—Ç–∏—Å—è –¥–æ –ë–î —á–µ—Ä–µ–∑ Python
        import psycopg2
        conn = psycopg2.connect(
            host="localhost",
            port=5432,
            user="user", 
            password="password",
            database="contacts_db"
        )
        conn.close()
        print("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–∏—Ö –¥–æ—Å—Ç—É–ø–Ω–∞")
    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ –ë–î: {e}")
        print("üí° –ó–∞–ø—É—Å—Ç—ñ—Ç—å: docker-compose up -d")
        return
    
    # –ó–∞–ø—É—Å–∫–∞—î–º–æ —Å–µ—Ä–≤–µ—Ä –≤ –æ–∫—Ä–µ–º–æ–º—É –ø—Ä–æ—Ü–µ—Å—ñ
    print("üöÄ –ó–∞–ø—É—Å–∫–∞—î–º–æ —Å–µ—Ä–≤–µ—Ä...")
    server_process = None
    try:
        # –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ poetry run –¥–ª—è –∑–∞–ø—É—Å–∫—É
        server_process = subprocess.Popen(
            ["poetry", "run", "uvicorn", "main:app", "--port", "8001"],
            stdout=subprocess.PIPE,
            stderr=subprocess.PIPE,
            creationflags=subprocess.CREATE_NEW_PROCESS_GROUP if os.name == 'nt' else 0
        )
        
        # –ß–µ–∫–∞—î–º–æ –∫—ñ–ª—å–∫–∞ —Å–µ–∫—É–Ω–¥ –Ω–∞ –∑–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
        print("‚è≥ –ß–µ–∫–∞—î–º–æ –∑–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞...")
        time.sleep(5)
        
        # –¢–µ—Å—Ç—É—î–º–æ API
        base_url = "http://127.0.0.1:8001"
        
        # –¢–µ—Å—Ç 1: –ö–æ—Ä–µ–Ω–µ–≤–∏–π endpoint
        print("1Ô∏è‚É£ –¢–µ—Å—Ç—É—î–º–æ –∫–æ—Ä–µ–Ω–µ–≤–∏–π endpoint...")
        response = requests.get(f"{base_url}/", timeout=10)
        if response.status_code == 200:
            print(f"‚úÖ GET / - {response.json()}")
        else:
            print(f"‚ùå GET / - Status: {response.status_code}")
        
        # –¢–µ—Å—Ç 2: –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –∫–æ–Ω—Ç–∞–∫—Ç—É
        print("2Ô∏è‚É£ –°—Ç–≤–æ—Ä—é—î–º–æ –∫–æ–Ω—Ç–∞–∫—Ç...")
        contact_data = {
            "first_name": "–Ü–≤–∞–Ω",
            "last_name": "–ü–µ—Ç—Ä–µ–Ω–∫–æ",
            "email": "ivan@example.com",
            "phone_number": "+380501234567",
            "birth_date": "1990-05-15",
            "additional_data": "–î—Ä—É–≥ –∑ —É–Ω—ñ–≤–µ—Ä—Å–∏—Ç–µ—Ç—É"
        }
        
        response = requests.post(
            f"{base_url}/api/contacts/",
            json=contact_data,
            timeout=10
        )
        
        if response.status_code == 201:
            contact = response.json()
            print(f"‚úÖ –ö–æ–Ω—Ç–∞–∫—Ç —Å—Ç–≤–æ—Ä–µ–Ω–æ - ID: {contact.get('id')}")
            contact_id = contact.get('id')
        else:
            print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è: {response.status_code} - {response.text}")
            return
        
        # –¢–µ—Å—Ç 3: –û—Ç—Ä–∏–º–∞–Ω–Ω—è –≤—Å—ñ—Ö –∫–æ–Ω—Ç–∞–∫—Ç—ñ–≤
        print("3Ô∏è‚É£ –û—Ç—Ä–∏–º—É—î–º–æ –≤—Å—ñ –∫–æ–Ω—Ç–∞–∫—Ç–∏...")
        response = requests.get(f"{base_url}/api/contacts/", timeout=10)
        if response.status_code == 200:
            contacts = response.json()
            print(f"‚úÖ –ó–Ω–∞–π–¥–µ–Ω–æ {len(contacts)} –∫–æ–Ω—Ç–∞–∫—Ç—ñ–≤")
        else:
            print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –∫–æ–Ω—Ç–∞–∫—Ç—ñ–≤: {response.status_code}")
        
        # –¢–µ—Å—Ç 4: –ü–æ—à—É–∫
        print("4Ô∏è‚É£ –¢–µ—Å—Ç—É—î–º–æ –ø–æ—à—É–∫...")
        response = requests.get(f"{base_url}/api/contacts/?search=–Ü–≤–∞–Ω", timeout=10)
        if response.status_code == 200:
            contacts = response.json()
            print(f"‚úÖ –ó–Ω–∞–π–¥–µ–Ω–æ {len(contacts)} –∫–æ–Ω—Ç–∞–∫—Ç—ñ–≤ –∑–∞ –ø–æ—à—É–∫–æ–º '–Ü–≤–∞–Ω'")
        else:
            print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –ø–æ—à—É–∫—É: {response.status_code}")
        
        # –¢–µ—Å—Ç 5: –î–Ω—ñ –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è
        print("5Ô∏è‚É£ –¢–µ—Å—Ç—É—î–º–æ –¥–Ω—ñ –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è...")
        response = requests.get(f"{base_url}/api/contacts/birthdays", timeout=10)
        if response.status_code == 200:
            contacts = response.json()
            print(f"‚úÖ –ó–Ω–∞–π–¥–µ–Ω–æ {len(contacts)} –∫–æ–Ω—Ç–∞–∫—Ç—ñ–≤ –∑ –Ω–∞–π–±–ª–∏–∂—á–∏–º–∏ –¥–Ω—è–º–∏ –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è")
        else:
            print(f"‚ùå –ü–æ–º–∏–ª–∫–∞: {response.status_code}")
        
        print("üéâ –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø—ñ—à–Ω–æ!")
        
    except requests.exceptions.RequestException as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–∞–ø–∏—Ç—É: {e}")
    except Exception as e:
        print(f"‚ùå –ù–µ–æ—á—ñ–∫—É–≤–∞–Ω–∞ –ø–æ–º–∏–ª–∫–∞: {e}")
    finally:
        # –ó—É–ø–∏–Ω—è—î–º–æ —Å–µ—Ä–≤–µ—Ä
        if server_process:
            print("üõë –ó—É–ø–∏–Ω—è—î–º–æ —Å–µ—Ä–≤–µ—Ä...")
            if os.name == 'nt':  # Windows
                server_process.send_signal(signal.CTRL_BREAK_EVENT)
            else:  # Unix/Linux
                server_process.terminate()
            server_process.wait(timeout=5)


if __name__ == "__main__":
    test_contacts_api()